{"version":3,"sources":["webpack://SimpleCanvas/webpack/universalModuleDefinition","webpack://SimpleCanvas/webpack/bootstrap","webpack://SimpleCanvas/./src/index.ts"],"names":["root","factory","exports","module","define","amd","SimpleCanvas","window","t","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","container","containerElement","this","tempCanvas","tempContext","document","getElementById","tagName","mainCanvas","createElement","dimmentions","getBoundingClientRect","width","height","mainContext","getContext","drawRect","x","y","strokeColor","lineWidth","fillColor","alpha","context","globalAlpha","fillStyle","fillRect","strokeStyle","strokeRect","drawLine","x1","y1","x2","y2","color","beginPath","moveTo","lineTo","stroke","drawCircle","radius","arc","Math","PI","closePath","fill","drawImage","src","img","Image","onload"],"mappings":"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","file":"simpleCanvas.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SimpleCanvas\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleCanvas\"] = factory();\n\telse\n\t\troot[\"SimpleCanvas\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\nexport default class SimpleCanvas {\n    constructor(container: string | HTMLElement) {\n        let containerElement: HTMLElement;\n        if (typeof container == \"string\")\n            containerElement = document.getElementById(container);\n        else\n            containerElement = container;\n\n        if (containerElement.tagName == \"CANVAS\") {\n            this.mainCanvas = containerElement as HTMLCanvasElement;\n        }\n        else {\n            this.mainCanvas = document.createElement(\"canvas\");\n            var dimmentions = containerElement.getBoundingClientRect()\n            this.mainCanvas.width = dimmentions.width;\n            this.mainCanvas.height = dimmentions.height;\n        }\n        this.mainContext = this.mainCanvas.getContext(\"2d\");\n    }\n\n    //#region Member variables\n\n    mainCanvas: HTMLCanvasElement;\n    mainContext: CanvasRenderingContext2D;\n    tempCanvas: HTMLCanvasElement = null;\n    tempContext: CanvasRenderingContext2D = null;\n\n    //#endregion\n\n    drawRect(x: number, y: number, width: number, height: number, strokeColor: string = \"black\", lineWidth: number = 1, fillColor: string = \"\", alpha: number = 1) {\n        var context = this.mainContext;\n        context.globalAlpha = alpha;\n        if (fillColor) {\n            context.fillStyle = fillColor;\n            context.fillRect(x, y, width, height);\n        }\n        if (lineWidth) {\n            context.strokeStyle = strokeColor;\n            context.lineWidth = lineWidth;\n            context.strokeRect(x, y, width, height);\n        }\n    }\n    drawLine(x1: number, y1: number, x2: number, y2: number, color: string = \"black\", lineWidth: number = 1, alpha: number = 1) {\n        var context = this.mainContext;\n        context.globalAlpha = alpha;\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        if (lineWidth) {\n            context.strokeStyle = color;\n            context.lineWidth = lineWidth;\n            context.stroke();\n        }\n    }\n    drawCircle(x: number, y: number, radius: number, strokeColor: string = \"black\", lineWidth: number = 1, fillColor: string = \"\", alpha: number = 1) {\n        var context = this.mainContext;\n        context.beginPath();\n        context.lineWidth = lineWidth;\n        context.globalAlpha = alpha;\n        context.arc(x, y, radius, 0, Math.PI * 2, true);\n        context.closePath();\n        if (lineWidth) {\n            context.strokeStyle = strokeColor;\n            context.stroke();\n        }\n        if (fillColor) {\n            context.fillStyle = fillColor;\n            context.fill();\n        }\n    }\n    drawImage(src: string, x: number, y: number, width: number, height: number, alpha: number = 1) {\n        var context = this.mainContext;\n        var img = new Image();\n        img.src = src;\n        context.globalAlpha = alpha;\n        img.onload = function () {\n            context.drawImage(img, x, y, width, height);\n        };\n    }\n}\n"],"sourceRoot":""}